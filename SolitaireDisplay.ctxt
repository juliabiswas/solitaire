#BlueJ class context
comment0.params=game
comment0.target=SolitaireDisplay(Solitaire)
comment0.text=\n\ Creates\ instances\ of\ the\ SolitaireDisplay\ class.\n\ \n\ @param\ \ \ game\ \ \ \ \ \ \ \ the\ Solitaire\ game\ that\ the\ \n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ object\ displays\n
comment1.params=g
comment1.target=void\ paintComponent(java.awt.Graphics)
comment1.text=\n\ Manages\ the\ paint\ component\ (graphics)\n\ of\ the\ display.\n\ \n\ @param\ \ \ g\ \ \ \ \ \ \ the\ graphics\ of\ the\ game\n
comment10.params=
comment10.target=boolean\ isWasteSelected()
comment10.text=\n\ Determines\ whether\ the\ waste\ is\ selected\n\ or\ not.\n\ \n\ @return\ \ \ \ \ \ true\ if\ the\ waste\ is\ selected;\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ otherwise,\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ false\n
comment11.params=
comment11.target=void\ selectWaste()
comment11.text=\n\ Selects\ the\ waste.\n
comment12.params=
comment12.target=boolean\ isPileSelected()
comment12.text=\n\ Determines\ whether\ a\ pile\ is\ selected\n\ or\ not.\n\ \n\ @return\ \ \ \ \ \ true\ if\ a\ pile\ is\ selected;\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ otherwise,\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ false\n
comment13.params=
comment13.target=boolean\ isFoundationSelected()
comment13.text=\n\ Determines\ whether\ a\ foundation\ is\ selected\n\ or\ not.\n\ \n\ @return\ \ \ \ \ \ true\ if\ a\ foundation\ is\ selected;\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ otherwise,\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ false\n
comment14.params=
comment14.target=int\ selectedPile()
comment14.text=\n\ Retrieves\ the\ index\ of\ the\ selected\n\ pile.\n\ \n\ @return\ \ \ \ \ \ the\ index\ of\ the\ selected\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ pile\n
comment15.params=
comment15.target=int\ selectedFoundation()
comment15.text=\n\ Retrieves\ the\ index\ of\ the\ selected\n\ foundation.\n\ \n\ @return\ \ \ \ \ \ the\ index\ of\ the\ selected\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ foundation\n
comment16.params=index
comment16.target=void\ selectFoundation(int)
comment16.text=\n\ Selects\ the\ foundation\ at\ the\ \n\ given\ index.\n\ \n\ @param\ \ \ index\ \ \ \ \ \ \ the\ index\ of\ the\ foundation\n
comment17.params=index
comment17.target=void\ selectPile(int)
comment17.text=\n\ Selects\ the\ pile\ at\ the\ \n\ given\ index.\n\ \n\ @param\ \ \ index\ \ \ \ \ \ \ the\ index\ of\ the\ pile\n
comment2.params=g\ card\ x\ y
comment2.target=void\ drawCard(java.awt.Graphics,\ Card,\ int,\ int)
comment2.text=\n\ Draws\ each\ of\ the\ playing\ cards.\n\ \n\ @param\ \ \ g\ \ \ \ \ \ \ the\ graphics\ of\ the\ card\n\ @param\ \ \ card\ \ \ \ the\ card\ that\ the\ graphics\ are\ for\ \ \n\ @param\ \ \ x\ \ \ \ \ \ \ the\ value\ of\ the\ card's\ x\ (horizontal)\ coordinate\n\ @param\ \ \ y\ \ \ \ \ \ \ the\ value\ of\ the\ card's\ y\ (vertical)\ coordinate\n
comment3.params=e
comment3.target=void\ mouseExited(java.awt.event.MouseEvent)
comment3.text=\n\ Invoked\ when\ the\ mouse\ exits\ a\ component.\n\ \n\ @param\ e\ \ \ \ \ \ the\ event\ where\ the\ mouse\ exited\ a\ component\n
comment4.params=e
comment4.target=void\ mouseEntered(java.awt.event.MouseEvent)
comment4.text=\n\ Invoked\ when\ the\ mouse\ enters\ a\ component.\n\ \n\ @param\ e\ \ \ \ \ \ the\ event\ where\ the\ mouse\ entered\ a\ component\n
comment5.params=e
comment5.target=void\ mouseReleased(java.awt.event.MouseEvent)
comment5.text=\n\ Invoked\ when\ a\ mouse\ button\ has\ been\ released\ on\ a\ component.\n\ \n\ @param\ e\ \ \ \ \ \ the\ event\ where\ the\ mouse\ was\ released\ \n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ on\ a\ component\n
comment6.params=e
comment6.target=void\ mousePressed(java.awt.event.MouseEvent)
comment6.text=\n\ Invoked\ when\ a\ mouse\ button\ has\ been\ pressed\ on\ a\ component.\n\ \n\ @param\ e\ \ \ \ \ \ the\ event\ where\ the\ mouse\ has\ been\ pressed\ \n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ on\ a\ component\n
comment7.params=e
comment7.target=void\ mouseClicked(java.awt.event.MouseEvent)
comment7.text=\n\ Invoked\ when\ the\ mouse\ button\ has\ been\ clicked\ on\ a\ component.\n\ \n\ @param\ e\ \ \ \ \ \ the\ event\ where\ the\ mouse\ has\ been\ clicked\ \n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ on\ a\ component\n
comment8.params=g\ x\ y
comment8.target=void\ drawBorder(java.awt.Graphics,\ int,\ int)
comment8.text=\n\ Draws\ the\ yellow\ border\ around\ the\ selected\ card.\n
comment9.params=
comment9.target=void\ unselect()
comment9.text=\n\ Unselects\ the\ selected\ card.\n
numComments=18
